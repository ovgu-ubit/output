import { AppConfig } from "./src/config/app.config";
import { TokenAuthorizationService } from "./src/authorization/token.authorization.service";
import { BibliographyImportService } from "./src/workflow/import/bibliography-import.service";
import { CrossrefImportService } from "./src/workflow/import/crossref-import.service";
import { OpenAccessMonitorImportService } from "./src/workflow/import/open-access-monitor-import.service";
import { BASEImportService } from "./src/workflow/import/base-import.service";
import { PubMedImportService } from "./src/workflow/import/pubmed-import";
import { OpenAlexImportService } from "./src/workflow/import/openalex-import.service";
import { ScopusImportService } from "./src/workflow/import/scopus-import.service";
import { UnpaywallEnrichService } from "./src/workflow/import/unpaywall-enrich.service";
import { CrossrefEnrichService } from "./src/workflow/import/crossref-enrich.service";
import { OpenAccessMonitorEnrichService } from "./src/workflow/import/open-access-monitor-enrich.service";
import { OpenAlexEnrichService } from "./src/workflow/import/openalex-enrich.service";
import { DOAJEnrichService } from "./src/workflow/import/doaj-enrich.service";
import { ScopusEnrichService } from "./src/workflow/import/scopus-enrich.service";
import { DOIandTitleDuplicateCheck } from "./src/workflow/check/doi-and-title-duplicate.service";
import { PublisherDOIPrefixService } from "./src/workflow/check/publisher_doi_prefix.service";
import { ExcelExportService } from "./src/workflow/export/excel-export.service";
import { MasterExportService } from "./src/workflow/export/master-export.service";
import { JulichExportService } from "./src/workflow/export/julich-export.service";
import { OpenAPCExportService } from "./src/workflow/export/openapc-export.service";
import { AuthorExportService } from "./src/workflow/export/author-export.service";
import { PublisherExportService } from "./src/workflow/export/publisher-export.service";
import { InstituteExportService } from "./src/workflow/export/institute-export.service";
import { GreaterEntityExportService } from "./src/workflow/export/greater-entity-export.service";
import { ContractExportService } from "./src/workflow/export/contract-export.service";
import { FunderExportService } from "./src/workflow/export/funder-export.service";
import { PubTypeExportService } from "./src/workflow/export/pub-type-export.service";
import { OACatExportService } from "./src/workflow/export/oa-cat-export.service";
import { CostCenterExportService } from "./src/workflow/export/cost-center-export.service";
import { CostTypeExportService } from "./src/workflow/export/cost-type-export.service";
import { MissingInstAuthorFilterService } from "./src/workflow/filter/missing-inst-author-filter.service";
import { MissingInstFilterService } from "./src/workflow/filter/missing-inst-filter.service";
import { MissingInvoiceDataService } from "./src/workflow/filter/missing-invoice-data-filter.service";
import { InitService } from "./src/services/init.service";

export default() : AppConfig => ({
    institution_label: "Otto-von-Guericke-Universität Magdeburg",
    institution_short_label: "OVGU",
    lock_timeout: 10, //in minutes
    searchTags: [
        "magdeburg",
        "ovgu",
        "guericke"
    ],
    affiliationTags: [
        "ovgu",
        "guericke",
        "universität magdeburg",
        "university magdeburg",
        "university of magdeburg",
        "universitätsklinikum magdeburg",
        "universitätsklinik magdeburg",
        "universitätsfrauenklinik magdeburg",
        "university hospital magdeburg",
        "universitätsmedizin magdeburg"
    ],
    ror_id: 'https://ror.org/xxxxx',
    openalex_id: 'xxxxx',
    api_key_unpaywall: 'xxx@xxx.de',
    api_key_oam: 'xxxx',
    api_key_scopus: 'xxxx',
    init_service: InitService,
    import_services: [
//        {path: 'bib', class: BibliographyImportService},
        {path: 'crossref', class: CrossrefImportService},
        {path: 'oam', class: OpenAccessMonitorImportService},
        {path: 'base', class: BASEImportService},
        {path: 'pubmed', class: PubMedImportService},
        {path: 'openalex', class: OpenAlexImportService},
        {path: 'scopus', class: ScopusImportService},
    ],
    doi_import_service: 'openalex', // the name of the enrich service to be used when a publication is imported via DOI
    enrich_services: [
        {path: 'unpaywall', class: UnpaywallEnrichService},
        {path: 'crossref', class: CrossrefEnrichService},
        {path: 'oam', class: OpenAccessMonitorEnrichService},
        {path: 'openalex', class: OpenAlexEnrichService},
        {path: 'doaj', class: DOAJEnrichService},
        {path: 'scopus', class: ScopusEnrichService},
    ],
    check_services: [
        {path: 'pub_dupl', class: DOIandTitleDuplicateCheck},
        {path: 'publisher_doi', class: PublisherDOIPrefixService},
    ],
    export_services: [
        {path: 'master', class: MasterExportService},
        {path: 'openapc', class: OpenAPCExportService},
        {path: 'author', class: AuthorExportService},
        {path: 'publisher', class: PublisherExportService},
        {path: 'institute', class: InstituteExportService},
        {path: 'greater-entity', class: GreaterEntityExportService},
        {path: 'contract', class: ContractExportService},
        {path: 'funder', class: FunderExportService},
        {path: 'pub-type', class: PubTypeExportService},
        {path: 'oa-cat', class: OACatExportService},
        {path: 'cost-center', class: CostCenterExportService},
        {path: 'cost-type', class: CostTypeExportService},
        {path: 'excel', class: ExcelExportService},
        {path: 'julich', class: JulichExportService},
    ],
    filter_services: [
        {path: 'no_aut_inst', class: MissingInstAuthorFilterService},
        {path: 'no_inst', class: MissingInstFilterService},
        {path: 'no_invoice', class: MissingInvoiceDataService},
    ],
    authorization_service: TokenAuthorizationService,
    optional_fields: {
        abstract: true,
        citation: true,
        page_count: true,
        pub_date_submitted: true,
        pub_date_print: true,
        peer_reviewed: true
    },
    pub_index_columns: [
        "title",
        "doi",
        //"link",
        "authors",
        "authors_inst",
        "corr_inst",
        "greater_entity",
        "oa_category",
        //"pub_type",
        //"contract",
        //"publisher",
        //"locked_status",
        "status",
        //"pub_date",
        "edit_date",
        "import_date",
        //"data_source",
    ]
});